/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Screens;

import Model.Conexion;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.sqlite.SQLiteException;

/**
 *
 * @author alejandrovelasco
 */
public class MateriasAndCarrerasSecreen extends javax.swing.JPanel {

    /**
     * Creates new form MateriasAndCarrerasSecreen
     */
    public MateriasAndCarrerasSecreen() {
        initComponents();
        llenarTabla();
        llenarTablaCarreras();
        btnGuardar.setIcon(setIcon("/imagenes/salvar.png", btnGuardar));
        btnEliminar.setIcon(setIcon("/imagenes/delete.png", btnEliminar));
        btnActualizar.setIcon(setIcon("/imagenes/actualizar.png", btnActualizar));
        btnRCarrera.setIcon(setIcon("/imagenes/add.png", btnRCarrera));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        head = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtSemestre = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtIdCarrera = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtCiclo = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnRCarrera = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableCarreras = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        head.setBackground(new java.awt.Color(102, 255, 255));
        head.setPreferredSize(new java.awt.Dimension(100, 40));
        head.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        jLabel1.setText("Materias");
        head.add(jLabel1);

        add(head, java.awt.BorderLayout.PAGE_START);

        jPanel2.setPreferredSize(new java.awt.Dimension(100, 200));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel2.setText("Id Materia");
        jLabel2.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel1.add(jLabel2);

        txtId.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel1.add(txtId);

        jPanel2.add(jPanel1);

        jPanel7.setBackground(new java.awt.Color(204, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(245, 30));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel7.setText("Nombre Materia");
        jLabel7.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel7.add(jLabel7);

        txtNombre.setPreferredSize(new java.awt.Dimension(120, 30));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel7.add(txtNombre);

        jPanel2.add(jPanel7);

        jPanel8.setBackground(new java.awt.Color(204, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(245, 30));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel8.setText("Semestre");
        jLabel8.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel8.add(jLabel8);

        txtSemestre.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel8.add(txtSemestre);

        jPanel2.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(204, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(245, 30));
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel9.setText("Id Carrera");
        jLabel9.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel9.add(jLabel9);

        txtIdCarrera.setPreferredSize(new java.awt.Dimension(120, 30));
        txtIdCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdCarreraActionPerformed(evt);
            }
        });
        jPanel9.add(txtIdCarrera);

        jPanel2.add(jPanel9);

        jPanel10.setBackground(new java.awt.Color(204, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(245, 30));
        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel10.setText("Ciclo Escolar");
        jLabel10.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel10.add(jLabel10);

        txtCiclo.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel10.add(txtCiclo);

        jPanel2.add(jPanel10);

        jPanel11.setBackground(new java.awt.Color(204, 255, 255));
        jPanel11.setPreferredSize(new java.awt.Dimension(245, 45));
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel11.setText("Buscar Materia");
        jLabel11.setPreferredSize(new java.awt.Dimension(95, 17));
        jPanel11.add(jLabel11);

        txtBuscar.setPreferredSize(new java.awt.Dimension(120, 30));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel11.add(txtBuscar);

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));
        jPanel11.add(jPanel4);

        jPanel12.setBackground(new java.awt.Color(204, 255, 255));
        jPanel12.setPreferredSize(new java.awt.Dimension(520, 60));
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel12.add(btnGuardar);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel12.add(btnEliminar);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel12.add(btnActualizar);

        btnRCarrera.setText("Registrar Carrera");
        btnRCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRCarreraActionPerformed(evt);
            }
        });
        jPanel12.add(btnRCarrera);

        jPanel11.add(jPanel12);

        jPanel2.add(jPanel11);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setPreferredSize(new java.awt.Dimension(100, 200));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel5.setPreferredSize(new java.awt.Dimension(300, 412));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("Carreras disponibles");
        jPanel5.add(jLabel3);

        JTableCarreras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id Carrera", "Nombre Carrera"
            }
        ));
        JTableCarreras.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTableCarreras.setMaximumSize(new java.awt.Dimension(50, 80));
        JTableCarreras.setPreferredSize(null);
        jScrollPane1.setViewportView(JTableCarreras);

        jPanel5.add(jScrollPane1);

        jPanel3.add(jPanel5, java.awt.BorderLayout.EAST);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setText("Materias");
        jPanel6.add(jLabel4);

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "nombre", "Semestre", "Id Carrera", "Ciclo Escolar", "Carrera"
            }
        ));
        JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTable.setMaximumSize(new java.awt.Dimension(2147483647, 20));
        JTable.setMinimumSize(new java.awt.Dimension(60, 20));
        JTable.setPreferredSize(null);
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JTable);

        jPanel6.add(jScrollPane2);

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        add(jPanel3, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents
    public void limpiar(){
        txtId.setText("");
        txtNombre.setText("");
        txtSemestre.setText("");
        txtCiclo.setText("");
        txtIdCarrera.setText("");
    }
    public void llenarTablaCarreras(){
         Conexion cc = new Conexion();
        Connection cn;
        try {
            cn = cc.conectar();
            Statement stL = cn.createStatement();
            ResultSet data = stL.executeQuery("SELECT * FROM carrera");

            //Model for JTable
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Id");
            model.addColumn("Nombre Carrera");

            String[] fila = new String[2];

            while (data.next()) {
                //System.out.println(data.getString(1)+ " " + data.getString(2));

                fila[0] = data.getString(1);
                fila[1] = data.getString(2);
                model.addRow(fila);

            }
            JTableCarreras.setModel(model);
            stL.close();
            cn.close();

        } catch (SQLiteException ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void llenarTabla(){
        Conexion cc = new Conexion();
        Connection cn;
        try {
            cn = cc.conectar();
            Statement st = cn.createStatement();
            ResultSet data = st.executeQuery("SELECT materia.id,materia.nombre,materia.semestre,materia.ciclo_escolar,carrera.id,carrera.nombre FROM  materia INNER JOIN carrera ON materia.id_carrera = carrera.id");

            //Model for JTable
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Id");
            model.addColumn("Nombre Materia");
            model.addColumn("Semestre");
            model.addColumn("Ciclo Escolar");
             model.addColumn("Id Carrera");
            model.addColumn("Carrera");

            String[] fila = new String[6];

            while (data.next()) {
                //System.out.println(data.getString(1)+ " " + data.getString(2));

                fila[0] = data.getString(1);
                fila[1] = data.getString(2);
                fila[2] = data.getString(3);
                fila[3] = data.getString(4);
                fila[4] = data.getString(5);
                fila[5] = data.getString(6);
                model.addRow(fila);

            }
            JTable.setModel(model);
            st.close();
            cn.close();

        } catch (SQLiteException ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void buscarTabla(String buscar){
        Conexion cc = new Conexion();
        Connection cn;
        try {
            cn = cc.conectar();
            Statement stl = cn.createStatement();
            ResultSet data = stl.executeQuery("SELECT materia.id,materia.nombre,"
                    + "materia.semestre,materia.ciclo_escolar,carrera.id,"
                    + "carrera.nombre FROM  materia INNER JOIN carrera "
                    + "ON materia.id_carrera = carrera.id WHERE materia.id =" +buscar);

            //Model for JTable
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Id");
            model.addColumn("Nombre");
            model.addColumn("Semestre");
            model.addColumn("Id Carrera");
            model.addColumn("Ciclo escolar");
            model.addColumn("Carrera");

            String[] fila = new String[6];

            while (data.next()) {
                //System.out.println(data.getString(1)+ " " + data.getString(2));

                fila[0] = data.getString(1);
                fila[1] = data.getString(2);
                fila[2] = data.getString(3);
                fila[3] = data.getString(4);
                fila[4] = data.getString(5);
                fila[5] = data.getString(6);
                model.addRow(fila);

            }
            JTable.setModel(model);
            stl.close();
            cn.close();

        } catch (SQLiteException ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
            if (ex.getMessage().contains("SQLITE_ERROR")) {
                llenarTabla();
            }
        } catch (Exception ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtIdCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdCarreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdCarreraActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String id, nombre, semestre, cicloEscolar,idcarrera;

        id = txtId.getText();
        nombre = txtNombre.getText();
        semestre = txtSemestre.getText();
        cicloEscolar=txtCiclo.getText();
        idcarrera = txtIdCarrera.getText();

        if (id.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Tienes valores nulos o no has seleccionado un registro",
                    "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                String resultado;
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                Statement stc = cn.createStatement();
                ResultSet data = stc.executeQuery("SELECT * FROM materia WHERE id =" + id);

                resultado = data.getString(1);
                System.out.println(resultado);

                Object[] options = {"Si", "No"};
                int opcion = JOptionPane.showOptionDialog(null, "¿Esta seguro que desea borrar el registro?", "Advertencia",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

                if (opcion == 0) {

                    try {

                        PreparedStatement psd = cn.prepareStatement("DELETE FROM materia WHERE id = ?");
                        psd.setString(1, id);

                        psd.executeUpdate();

                        psd.close();
                        cn.close();

                        llenarTabla();
                        limpiar();

                    } catch (Exception e) {
                        Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                        if (e.getMessage().contains("SQLITE_MISMATCH")) {
                            JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                                    "Hey!", JOptionPane.ERROR_MESSAGE);

                        }
                    }
                } else {

                }

            } catch (Exception e) {
                Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(null, "Id invalido o no existe",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String id, nombre, semestre, idcarrera, cicloEscolar;

        id = txtId.getText();
        nombre = txtNombre.getText();
        semestre = txtSemestre.getText();
        idcarrera = txtIdCarrera.getText();
        cicloEscolar = txtCiclo.getText();
        
        
        try{
                String resultado;
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                Statement stc = cn.createStatement();
                ResultSet data = stc.executeQuery("SELECT * FROM carrera WHERE id ="+idcarrera);

                resultado = data.getString(1);
                System.out.println(resultado);
                
            try {
           
            PreparedStatement psG = cn.prepareStatement("INSERT INTO materia VALUES (?,?,?,?,?)");
            psG.setString(1, id);
            psG.setString(2, nombre);
            psG.setString(3, semestre);
            psG.setString(4, idcarrera);
            psG.setString(5, cicloEscolar);
            psG.executeUpdate();

            psG.close();
            cn.close();

            llenarTabla();
            limpiar();

        } catch (Exception e) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
            if (e.getMessage().contains("SQLITE_MISMATCH")) {
                JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                        "Hey!", JOptionPane.ERROR_MESSAGE);

            }
            if (e.getMessage().contains("SQLITE_CONSTRAINT_PRIMARYKEY")) {
                JOptionPane.showMessageDialog(null, "Id materia ya esta en uso",
                        "Hey!", JOptionPane.ERROR_MESSAGE);

            }
            
        }
                
        }catch(Exception ex){
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "El id de la carrera es incorrecto o no existe",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnRCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRCarreraActionPerformed
        String nombreCarrera = JOptionPane.showInputDialog("Ingrese el nombre de la carrera");
        
        if(nombreCarrera.equals("")){
            JOptionPane.showMessageDialog(null, "Valor vacio",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                
            PreparedStatement psCa = cn.prepareStatement("INSERT INTO carrera(nombre) VALUES(?)");
            psCa.setString(1,nombreCarrera);
            psCa.executeUpdate();

            psCa.close();
            cn.close();

            llenarTablaCarreras();
            limpiar();

        } catch (Exception e) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
            
        }
        
        System.out.println(nombreCarrera);
        }
    }//GEN-LAST:event_btnRCarreraActionPerformed

    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        int fila = JTable.getSelectedRow();
        
        txtId.setText((String) JTable.getValueAt(fila, 0));
        txtNombre.setText((String) JTable.getValueAt(fila, 1));
        txtSemestre.setText((String) JTable.getValueAt(fila, 2));
        txtCiclo.setText((String) JTable.getValueAt(fila, 3));
        txtIdCarrera.setText((String) JTable.getValueAt(fila, 4));
    }//GEN-LAST:event_JTableMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String id, nombre, semestre, cicloEscolar,idcarrera;

        id = txtId.getText();
        nombre = txtNombre.getText();
        semestre = txtSemestre.getText();
        cicloEscolar=txtCiclo.getText();
        idcarrera = txtIdCarrera.getText();

        if (id.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Tienes valores nulos o no has seleccionado un registro",
                    "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                String resultado;
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                Statement stc = cn.createStatement();
                ResultSet data = stc.executeQuery("SELECT * FROM materia WHERE id =" + id);

                resultado = data.getString(1);
                System.out.println(resultado);

                try {
                    
                    if(id.isEmpty()||nombre.isEmpty()||semestre.isEmpty()||cicloEscolar.isEmpty()||idcarrera.isEmpty()){
                        JOptionPane.showMessageDialog(null, "Debes llenar todos los campos",
                                "Hey!", JOptionPane.ERROR_MESSAGE);
                    }else{
                        PreparedStatement psa = cn.prepareStatement("UPDATE materia SET nombre = ?,"
                            + " semestre = ?,id_carrera = ?, ciclo_escolar = ? WHERE id = ?");

                    psa.setString(1, nombre);
                    psa.setString(2, semestre);
                    psa.setString(3, idcarrera);
                    psa.setString(4, cicloEscolar);
                    psa.setString(5, id);

                    psa.executeUpdate();

                    psa.close();
                    cn.close();

                    llenarTabla();
                    limpiar();
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
                    if (ex.getMessage().contains("SQLITE_MISMATCH")) {
                        JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                                "Hey!", JOptionPane.ERROR_MESSAGE);

                    }
                }

            } catch (Exception e) {
                Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(null, "Id invalido o no existe",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        buscarTabla(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased
    public Icon setIcon(String url, JButton menu){
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        
        int ancho = 24;
        int alto = 24;
        
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
        
        return icono;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JTable JTableCarreras;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRCarrera;
    private javax.swing.JPanel head;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCiclo;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdCarrera;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSemestre;
    // End of variables declaration//GEN-END:variables
}
