/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Screens;

import Model.Conexion;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.sqlite.SQLiteException;

/**
 *
 * @author alejandrovelasco
 */
public class AltaAlumnosScreen extends javax.swing.JPanel {

    /**
     * Creates new form AltaAlumnosScreen
     */
    public AltaAlumnosScreen() {
        initComponents();
        llenaTabla();
        btnGuardar.setIcon(setIcon("/imagenes/salvar.png", btnGuardar));
        btnBorrar.setIcon(setIcon("/imagenes/delete.png", btnBorrar));
        btnActualizar.setIcon(setIcon("/imagenes/actualizar.png", btnActualizar));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //Metodo para llenar la tabla
    public void llenaTabla() {

        Conexion cc = new Conexion();
        Connection cn;
        try {
            cn = cc.conectar();
            Statement st = cn.createStatement();
            ResultSet data = st.executeQuery("SELECT * FROM alumno");

            //Model for JTable
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Id");
            model.addColumn("Nombre");
            model.addColumn("Direccion");
            model.addColumn("Correo");
            model.addColumn("Telefono");
            model.addColumn("CURP");
            model.addColumn("Matricula");
            model.addColumn("Semestre");
            model.addColumn("Id Carrera");

            String[] fila = new String[9];

            while (data.next()) {
                //System.out.println(data.getString(1)+ " " + data.getString(2));

                fila[0] = data.getString(1);
                fila[1] = data.getString(2);
                fila[2] = data.getString(3);
                fila[3] = data.getString(4);
                fila[4] = data.getString(5);
                fila[5] = data.getString(6);
                fila[6] = data.getString(7);
                fila[7] = data.getString(8);
                fila[8] = data.getString(9);
                model.addRow(fila);

            }
            JTable.setModel(model);
            st.close();
            cn.close();

        } catch (SQLiteException ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    //Buscar registros
    public void buscarTabla(String buscar) {

        Conexion cc = new Conexion();
        Connection cn;
        try {
            cn = cc.conectar();
            Statement stl = cn.createStatement();
            ResultSet data = stl.executeQuery("SELECT * FROM alumno WHERE id =" + buscar);

            //Model for JTable
            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("Id");
            model.addColumn("Nombre");
            model.addColumn("Direccion");
            model.addColumn("Correo");
            model.addColumn("Telefono");
            model.addColumn("CURP");
            model.addColumn("Matricula");
            model.addColumn("Semestre");
            model.addColumn("Id Carrera");

            String[] fila = new String[9];

            while (data.next()) {
                //System.out.println(data.getString(1)+ " " + data.getString(2));

                fila[0] = data.getString(1);
                fila[1] = data.getString(2);
                fila[2] = data.getString(3);
                fila[3] = data.getString(4);
                fila[4] = data.getString(5);
                fila[5] = data.getString(6);
                fila[6] = data.getString(7);
                fila[7] = data.getString(8);
                fila[8] = data.getString(9);
                model.addRow(fila);

            }
            JTable.setModel(model);
            stl.close();
            cn.close();

        } catch (SQLiteException ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
            if (ex.getMessage().contains("SQLITE_ERROR")) {
                llenaTabla();
            }
        } catch (Exception ex) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void limpiar() {
        txtId.setText("");
        txtNombre.setText("");
        txtDireccion.setText("");
        txtCorreo.setText("");
        txtTelefono.setText("");
        txtCurp.setText("");
        txtMatricula.setText("");
        txtSemestre.setText("");
        txtIdCarrera.setText("");
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        head = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtSemestre = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtCurp = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtIdCarrera = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        head.setBackground(new java.awt.Color(255, 153, 153));
        head.setPreferredSize(new java.awt.Dimension(640, 40));
        head.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        jLabel7.setText("Alta de Alumnos");
        head.add(jLabel7);

        add(head, java.awt.BorderLayout.PAGE_START);

        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));

        jPanel11.setBackground(new java.awt.Color(255, 204, 204));
        jPanel11.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel12.setBackground(new java.awt.Color(255, 204, 204));
        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jLabel9.setText("Id");
        jLabel9.setPreferredSize(new java.awt.Dimension(70, 17));
        jPanel12.add(jLabel9);

        txtId.setPreferredSize(new java.awt.Dimension(200, 30));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        jPanel12.add(txtId);

        jPanel11.add(jPanel12);

        jPanel15.setBackground(new java.awt.Color(255, 204, 204));
        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jLabel11.setText("Direccion");
        jLabel11.setPreferredSize(new java.awt.Dimension(70, 17));
        jPanel15.add(jLabel11);

        txtDireccion.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel15.add(txtDireccion);

        jPanel11.add(jPanel15);

        jPanel16.setBackground(new java.awt.Color(255, 204, 204));
        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jLabel12.setText("Telefono");
        jLabel12.setPreferredSize(new java.awt.Dimension(70, 17));
        jPanel16.add(jLabel12);

        txtTelefono.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel16.add(txtTelefono);

        jPanel11.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(255, 204, 204));
        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jLabel13.setText("Matricula");
        jLabel13.setPreferredSize(new java.awt.Dimension(70, 17));
        jPanel17.add(jLabel13);

        txtMatricula.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel17.add(txtMatricula);

        jPanel11.add(jPanel17);

        jPanel18.setBackground(new java.awt.Color(255, 204, 204));
        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jLabel14.setText("Semestre");
        jLabel14.setPreferredSize(new java.awt.Dimension(70, 17));
        jPanel18.add(jLabel14);

        txtSemestre.setPreferredSize(new java.awt.Dimension(200, 30));
        txtSemestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemestreActionPerformed(evt);
            }
        });
        jPanel18.add(txtSemestre);

        jPanel11.add(jPanel18);

        jPanel19.setBackground(new java.awt.Color(255, 204, 204));
        jPanel19.setPreferredSize(new java.awt.Dimension(317, 50));
        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 20));

        jLabel1.setText("Buscar Alumno por ID");
        jPanel19.add(jLabel1);

        txtBuscar.setPreferredSize(new java.awt.Dimension(100, 30));
        txtBuscar.setSize(new java.awt.Dimension(100, 30));
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel19.add(txtBuscar);

        jPanel11.add(jPanel19);

        jPanel10.add(jPanel11);

        jPanel13.setBackground(new java.awt.Color(255, 204, 204));
        jPanel13.setPreferredSize(new java.awt.Dimension(300, 30));
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel14.setBackground(new java.awt.Color(255, 204, 204));
        jPanel14.setMinimumSize(new java.awt.Dimension(136, 33));
        jPanel14.setPreferredSize(new java.awt.Dimension(300, 20));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10);
        flowLayout1.setAlignOnBaseline(true);
        jPanel14.setLayout(flowLayout1);

        jLabel10.setText("Nombre");
        jLabel10.setPreferredSize(new java.awt.Dimension(60, 17));
        jPanel14.add(jLabel10);

        txtNombre.setPreferredSize(new java.awt.Dimension(200, 30));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel14.add(txtNombre);

        jPanel13.add(jPanel14);

        jPanel20.setBackground(new java.awt.Color(255, 204, 204));
        jPanel20.setMinimumSize(new java.awt.Dimension(136, 33));
        jPanel20.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel16.setText("Correo");
        jLabel16.setPreferredSize(new java.awt.Dimension(60, 17));
        jPanel20.add(jLabel16);

        txtCorreo.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel20.add(txtCorreo);

        jPanel13.add(jPanel20);

        jPanel23.setBackground(new java.awt.Color(255, 204, 204));
        jPanel23.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel19.setText("CURP");
        jLabel19.setPreferredSize(new java.awt.Dimension(60, 17));
        jPanel23.add(jLabel19);

        txtCurp.setPreferredSize(new java.awt.Dimension(200, 30));
        txtCurp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurpActionPerformed(evt);
            }
        });
        jPanel23.add(txtCurp);

        jPanel13.add(jPanel23);

        jPanel24.setBackground(new java.awt.Color(255, 204, 204));
        jPanel24.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        jLabel20.setText("Id Carrera");
        jLabel20.setPreferredSize(new java.awt.Dimension(60, 17));
        jPanel24.add(jLabel20);

        txtIdCarrera.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel24.add(txtIdCarrera);

        jPanel13.add(jPanel24);

        jPanel25.setBackground(new java.awt.Color(255, 204, 204));
        jPanel25.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));
        jPanel13.add(jPanel25);

        jPanel26.setBackground(new java.awt.Color(255, 204, 204));
        jPanel26.setPreferredSize(new java.awt.Dimension(300, 20));
        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel26.add(btnGuardar);

        btnBorrar.setText("Eliminar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel26.add(btnBorrar);

        btnActualizar.setText("Actualizar");
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel26.add(btnActualizar);

        jPanel13.add(jPanel26);

        jPanel10.add(jPanel13);

        add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(87, 200));
        jPanel1.setLayout(new java.awt.BorderLayout());

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Direccion", "Correo", "Telefono", "CURP", "Matricula", "Semestre", "Id Carrera"
            }
        ));
        JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTable.setMinimumSize(new java.awt.Dimension(300, 80));
        JTable.setPreferredSize(null);
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTable);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.PAGE_START);

        add(jPanel1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtSemestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemestreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemestreActionPerformed

    private void txtCurpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurpActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String id, nombre, direccion, correo, telefono, curp, matricula, semestre, idcarrera;

        id = txtId.getText();
        nombre = txtNombre.getText();
        direccion = txtDireccion.getText();
        correo = txtCorreo.getText();
        telefono = txtTelefono.getText();
        curp = txtCurp.getText();
        matricula = txtMatricula.getText();
        semestre = txtSemestre.getText();
        idcarrera = txtIdCarrera.getText();

        if (id.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Tienes valores nulos o no has seleccionado un registro",
                    "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                String resultado;
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                Statement stc = cn.createStatement();
                ResultSet data = stc.executeQuery("SELECT * FROM alumno WHERE id =" + id);

                resultado = data.getString(1);
                System.out.println(resultado);

                try {
                    
                    if(id.isEmpty()||nombre.isEmpty()||direccion.isEmpty()||
                            correo.isEmpty()||telefono.isEmpty()||curp.isEmpty()||
                            matricula.isEmpty()||semestre.isEmpty()||idcarrera.isEmpty()){
                        JOptionPane.showMessageDialog(null, "Debes llenar todos los campos",
                                "Hey!", JOptionPane.ERROR_MESSAGE);
                    }else{
                        PreparedStatement psa = cn.prepareStatement("UPDATE alumno SET nombre = ?,"
                            + " direccion = ?, correo = ?, telefono = ?, curp = ?, matricula = ?,"
                            + " semestre = ?, id_carrera = ? WHERE id = ?");

                    psa.setString(1, nombre);
                    psa.setString(2, direccion);
                    psa.setString(3, correo);
                    psa.setString(4, telefono);
                    psa.setString(5, curp);
                    psa.setString(6, matricula);
                    psa.setString(7, semestre);
                    psa.setString(8, idcarrera);
                    psa.setString(9, id);

                    psa.executeUpdate();

                    psa.close();
                    cn.close();

                    llenaTabla();
                    limpiar();
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, ex);
                    if (ex.getMessage().contains("SQLITE_MISMATCH")) {
                        JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                                "Hey!", JOptionPane.ERROR_MESSAGE);

                    }
                }

            } catch (Exception e) {
                Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(null, "Id invalido o no existe",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        String id, nombre, direccion, correo, telefono, curp, matricula, semestre, idcarrera;

        id = txtId.getText();
        nombre = txtNombre.getText();
        direccion = txtDireccion.getText();
        correo = txtCorreo.getText();
        telefono = txtTelefono.getText();
        curp = txtCurp.getText();
        matricula = txtMatricula.getText();
        semestre = txtSemestre.getText();
        idcarrera = txtIdCarrera.getText();

        try {
            Conexion cc = new Conexion();
            Connection cn = cc.conectar();

            PreparedStatement pst = cn.prepareStatement("INSERT INTO alumno VALUES (?,?,?,?,?,?,?,?,?)");
            pst.setString(1, id);
            pst.setString(2, nombre);
            pst.setString(3, direccion);
            pst.setString(4, correo);
            pst.setString(5, telefono);
            pst.setString(6, curp);
            pst.setString(7, matricula);
            pst.setString(8, semestre);
            pst.setString(9, idcarrera);
            pst.executeUpdate();

            pst.close();
            cn.close();

            llenaTabla();
            limpiar();

        } catch (Exception e) {
            Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
            if (e.getMessage().contains("SQLITE_MISMATCH")) {
                JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                        "Hey!", JOptionPane.ERROR_MESSAGE);

            }
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        int fila = JTable.getSelectedRow();

        txtId.setText((String) JTable.getValueAt(fila, 0));
        txtNombre.setText((String) JTable.getValueAt(fila, 1));
        txtDireccion.setText((String) JTable.getValueAt(fila, 2));
        txtCorreo.setText((String) JTable.getValueAt(fila, 3));
        txtTelefono.setText((String) JTable.getValueAt(fila, 4));
        txtCurp.setText((String) JTable.getValueAt(fila, 5));
        txtMatricula.setText((String) JTable.getValueAt(fila, 6));
        txtSemestre.setText((String) JTable.getValueAt(fila, 7));
        txtIdCarrera.setText((String) JTable.getValueAt(fila, 8));
    }//GEN-LAST:event_JTableMouseClicked

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        String id, nombre, direccion, correo, telefono, curp, matricula, semestre, idcarrera;

        id = txtId.getText();
        nombre = txtNombre.getText();
        direccion = txtDireccion.getText();
        correo = txtCorreo.getText();
        telefono = txtTelefono.getText();
        curp = txtCurp.getText();
        matricula = txtMatricula.getText();
        semestre = txtSemestre.getText();
        idcarrera = txtIdCarrera.getText();

        if (id.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Tienes valores nulos o no has seleccionado un registro",
                    "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                String resultado;
                Conexion cc = new Conexion();
                Connection cn = cc.conectar();
                Statement stc = cn.createStatement();
                ResultSet data = stc.executeQuery("SELECT * FROM alumno WHERE id =" + id);

                resultado = data.getString(1);
                System.out.println(resultado);

                Object[] options = {"Si", "No"};
                int opcion = JOptionPane.showOptionDialog(null, "¿Esta seguro que desea borrar el registro?", "Advertencia",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

                if (opcion == 0) {

                    try {

                        PreparedStatement psd = cn.prepareStatement("DELETE FROM alumno WHERE id = ?");
                        psd.setString(1, id);

                        psd.executeUpdate();

                        psd.close();
                        cn.close();

                        llenaTabla();
                        limpiar();

                    } catch (Exception e) {
                        Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                        if (e.getMessage().contains("SQLITE_MISMATCH")) {
                            JOptionPane.showMessageDialog(null, "Tienes valores nulos o incorrectos",
                                    "Hey!", JOptionPane.ERROR_MESSAGE);

                        }
                    }
                } else {

                }

            } catch (Exception e) {
                Logger.getLogger(AltaAlumnosScreen.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(null, "Id invalido o no existe",
                        "Hey!", JOptionPane.ERROR_MESSAGE);
            }

        }


    }//GEN-LAST:event_btnBorrarActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        buscarTabla(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked

    }//GEN-LAST:event_btnActualizarMouseClicked
    public Icon setIcon(String url, JButton menu){
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        
        int ancho = 24;
        int alto = 24;
        
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
        
        return icono;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JPanel head;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCurp;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdCarrera;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSemestre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
